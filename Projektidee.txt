### Anmerkung Flo - 27.05. 
  Aufgrund des geringen Zeitfensters für VS wäre ich für eine reine Steuerung durch das Blickfeld.
  Also per "VREyeRaycaster" tracken wo der nutzer hinblickt, und dann damit Schaltflächen/Scripte aktivieren.

 
### Anmerkung Tim - 28.5.
	Sehe ich genauso. Ich hatte gedacht, dass man in einer Art Kammer gefangen ist und man halt Dinge inspizieren muss
	um rauszufinden wie man rauskommt. Oder so. kp xoxoxo lol :egg: 
	
	Flo:
	Klingt gut. Erste Tests laufen auch schon super. Ich bring Alles was ich bis dahin habe am Montag mal mit.
	Können ja überlegen ob wir lowpoly Dinge in Blender bauen, um diese in Unity einzubringen. 

	Tim:
	Auf jedenfall. Hab auch alles zum Laufen gekriegt mit meinen Cardboard Glasses. Der Grundstein ist gelegt.


### Anmerkung Flo - 29.05.
	Nochmal wegen der räumlichen Bewegung:
	Wir könnten auch über Events auto-Routen starten.
	Das man sich weiterhin frei umsehen kann, und dabei einen festen Weg abgeht.
	Oder halt durch ablenden und aufblenden den Ort wechseln.
	
	Tim:
	Oder sobald man den Boden "anvisiert" bewegt man sich nach vorne. Also quasi wenn man 
	runterschaut auf den Boden bewegt man sich in die Richtung.
	
	Flo:
	Ja, aber da bleibt das Problem mit der Abfrage.
	Da man beim normalen umschauen ja auch teilweise Boden trifft.
	Oder es gibt einzelnde Hot-Spots, ähnlich wie bei googleStreetView,
	plus eine höchstentfernung in der die anwählbar sind.
	
	Tim:
	Naja wenn wir quasi so einen kleinen Radius(2D-Collider?) auf den Boden unter den Character machen der sich mit bewegt, dann kann man den ja als Hotspot nehmen. Ansonsten glaube ich garnicht, dass man den Boden zu oft trifft.
	Müssen wir Montag nochmal drüber reden 
	
	Flo:
	Hehe, mit HotSpots meinte ich kleine markierte Bereiche die man für 5 Sekunden angucken kann,
	um zu ihnen zu gehen. Das man sich sozusagen an diesen Punkten durch die Welt hangeln könnte.
	Naja, wir schnacken morgen in Ruhe.

### Anmerkung Flo - 02.Juni.
	Okay: wie ist der Status?
	Was brauchen wir noch an Objekten im Raum?
	Gibt es schon neue Scripte zum drüberschauen für mich ? :D
	
	
	Tim:
	Jo, hab eben das Geh-Skript fertig gekriegt. Wenn du jetzt auf ein Objekt schaust bewegst du dich drauf zu. 
	Ist aber noch recht unschön deswegen überarbeite ich das nochmal. Was brauchen wir noch an Skripten erstmal?
	Btw: Kannst du deine Modelle als .fbx hochladen?
	
	Flo:
	Hab ich gemacht. Aber sage mir einmal: warum .fbx und nicht .obj?
	Habe bisher immer .obj-Dateien in Unity importiert.
	
	Tim:
	Skript ist jetzt auch oben zum Bewegen. Wir müssten mal drüber reden was an Funktionen jetzt noch dazu kommen muss. Sprich Interaktion und dergleichen.
	.fbx weil Unity das ganz gut importieren kann und auch das Material/Farbe und so übernimmt. Hab mit .obj noch nie gearbeitet.

	Tim:
	Hab ein Skript geschrieben, damit ein anvisiertes Objekt hell aufleuchtet um es von gewöhnlichen Objekten zu unterscheiden.
	
	Flo:
	Top! *DaumenHoch*
	Sollten nochmal Brainstorming zu den weiteren Objekten und dem ablauf machen.
	( Glaub Cisco ist sehr eingebunden bei INF2 zur Zeit :x )

	Tim:
	Dem stimme ich zu. Naja spätestens Montag sehen wa uns ja sowieso bis dahin können wa uns ja mal Gedanken machen. Wer baut eigentlich den Raum?
	Also wer gestaltet das Level? 

	Tim:
	Hab mal ein Design für die Tür hochgeladen. So ähnlich hatte ich die mir vorgestellt.

### Anmerkung Tim - 04.Juni.
	Hab mal Zahlen über die Kugeln gemacht. So ist es sicherlich einfacher Hinweise zu verteilen.
	
	Flo:
	Sehr gut! Allerdings finde ich die Reihenfolge komisch :)
	Würde das eher nach westlicher Leserichtung ausrichten.
	
		1	2
		    3
		4	5
		
	Aber das sind ja nur peanuts. 
	Ich kann ja mal n Testraum bauen und die objekte einfügen.

	Tim:
	Die Reihenfolge ist relativ egol :) Gern! Du könntest auch ein neues Unityprojekt erstellen im GitHub Ordner auf das wir alle Zugriff hätten.
	Dann hätten wir quasi ein übereinstimmendes Projekt :D 
	
	Tim:
	Ich dachte man könnte die Reihenfolge als Papierschnipsel verteilen im Raum. Bzw man kriegt die Schnipsel durch Rätsel/Minispiele. (siehe DoorNumber.png)

	Tim:
	Ist irgendwie schon mega nervig mit dem Projekt in Github...Jedesmal wenn man es nur öffnet hat man 300+ Changes :/
	Vllt müssen wir uns was anderes einfallen lassen. 

	Flo:
	Joa :'(
	Zur Not Nur eine Projekt-Version auf Cisco's Laptop, und dann Montags vor- , 
	zwischen- und/oder nach VS zusammensetzen.
	Wir können uns dann ja 2x die Woche per usb stick die aktuelle versionen holen,
	und da neues drin testen oder dazu bauen.
	
	Cisco:
	Was die Zahlen-Schnippsel angeht wäre ich dafür, dass man sie nur durch erfolgreiche Spiele gewinnt, bzw. bei
	nichterfolgreichen Spielen eine Auswahl an Schnippseln bekommt (vll. 2-3) von denen aber nur einer der richtige ist.
	Das mit den 300+ Changes klingt extrem nervig. Können meinen Laptop gerne als Basis benutzen, finde es auch besser
	nur eine Projektversion zu haben. 

	Flo:
	Okay. Aber was genau für MiniGames?
	Wir brauchen zuerst die Rätsel und Ideen zu den Games, bevor wir die bauen könn :)
	Können ja gemeinsam Ideen sammeln:
	- 4 Lampen die in einer Reihenfolge aufleuchten, und man muss das Muster nachmachen.
	- behalte ein sich bewegendes Objekt für 12 Sek im Focus.
	- ...
	Da wir nur den FocusPunkt und Kopfbewegung als Input haben ist die Auswahl glaube ich 
	recht eingeschränkt. 

	TeamSitzung:
	Projekt: MarktStand
	User verkauft Nahrung an Kunden.
	
	Blender:
	- Landschaft (Terrain)
	- Dinge im Stand:
		- Frittöse
		- kl. TV (RL filme ablaufen lassen)
		- Kasse (unterhalb der Ablage)
		- Geld (kleingeld + scheine)
		- Telefon (UI mit Liste "Nachbestellen")
		- Herdplatten
		- NOTKNOPF (Kein Bock mehr: Feierabend) - Metallrollo bauen was runterfährt.
	
	- Kunden (UI überm Kopf mit Wunsch und Restlicher Wartezeit)
	- Ambiente (Vögel,Fahrradfahrer,etc)
	
	Inhalt:
	Ziel: Geld ansammeln.
	Stand hat kosten / festen Preis.
	
	
###Tim:
	Mein Boxmensch und ein erstes Spawnskript. Go wild
	
